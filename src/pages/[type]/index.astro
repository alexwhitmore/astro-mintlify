---
import { getCollection } from 'astro:content'
import DocumentationLayout from '../../layouts/DocumentationLayout.astro'
import { ensureCollectionType, type SiteConfig } from '../../types'

export async function getStaticPaths() {
  const siteConfig: SiteConfig = import.meta.env.SITE_CONFIG
  return siteConfig.navigation.map((nav) => ({
    params: { type: nav.type },
  }))
}

const { type } = Astro.params as { type: string }
const siteConfig: SiteConfig = import.meta.env.SITE_CONFIG

const groupInfo = siteConfig.navigation.find((nav) => nav.type === type)
if (!groupInfo) {
  throw new Error(`No group info found for type: ${type}`)
}

const collectionType = ensureCollectionType(type)
const pages = await getCollection(collectionType)

const tocItems = pages.map((page) => ({
  depth: 2,
  slug: page.slug,
  text: page.data.title,
  children: [],
}))
---

<DocumentationLayout title={groupInfo.group} toc={tocItems}>
  <h1>{groupInfo.group}</h1>
  <ul>
    {
      pages.map((page) => (
        <li>
          <a href={`/${type}/${page.slug}`}>{page.data.title}</a>
          {page.data.description && <p>{page.data.description}</p>}
        </li>
      ))
    }
  </ul>
</DocumentationLayout>

---
import { getCollection, type CollectionEntry } from 'astro:content'
import DocumentationLayout from '../layouts/DocumentationLayout.astro'

export async function getStaticPaths() {
  const collections = ['getting-started', 'essentials', 'guides'] as const
  return collections.map((collection) => ({
    params: { type: collection },
  }))
}

const { type } = Astro.params
let pages: CollectionEntry<'getting-started' | 'essentials' | 'guides'>[] = []

// Type guard function
function isValidCollection(
  value: string
): value is 'getting-started' | 'essentials' | 'guides' {
  return ['getting-started', 'essentials', 'guides'].includes(value)
}

if (isValidCollection(type)) {
  pages = await getCollection(type)
} else {
  throw new Error(`Invalid collection type: ${type}`)
}
---

<DocumentationLayout title={`${type} Documentation`} toc={[]}>
  <h1>{type} Documentation</h1>
  <ul>
    {
      pages.map((page) => (
        <li>
          <a href={`/${type}/${page.slug}`}>{page.data.title}</a>
        </li>
      ))
    }
  </ul>
</DocumentationLayout>
